#!/usr/bin/env python
# -*- coding: utf-8 -*-

from __future__ import division

import sys

from numpy import *  # noqa
import scikits.audiolab as al

import rospy
from rabbit_msgs.msg import Audio

if __name__ == '__main__':
    rospy.init_node("audio_publisher")

    n_step = rospy.get_param("~n_step", 160)
    n_frame = rospy.get_param("~n_frame", 512)
    fname = rospy.get_param("~fname", "")

    rospy.loginfo("Step length: %d" % n_step)
    rospy.loginfo("Frame length: %d" % n_frame)
    rospy.loginfo("Wave file name: %s" % fname)

    audio_pub = rospy.Publisher("audio", Audio, queue_size=100)

    wav = al.wavread(fname)[0]
    T, M = wav.shape

    audio_msg = Audio()
    audio_msg.nch = M
    audio_msg.len = n_frame

    r = rospy.Rate(16e3 / n_step)
    for idx, t in enumerate(range(0, T-n_frame, n_step)):
        t_ = float(t) / T 
        print "%0.3f%% " % (t_ * 100) + "[" + "*" * ceil(t_ * 30) + " " * floor((1 - t_) * 30-1) + "]\r",
        sys.stdout.flush()

        if rospy.is_shutdown():
            break

        w = wav[t:t+n_frame, :]

        audio_msg.data = w.reshape(n_frame * M)
        audio_msg.header.seq = idx

        audio_pub.publish(audio_msg)

        r.sleep()
